/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['cookie.js']) {
  _$jscoverage['cookie.js'] = [];
  _$jscoverage['cookie.js'][5] = 0;
  _$jscoverage['cookie.js'][7] = 0;
  _$jscoverage['cookie.js'][11] = 0;
  _$jscoverage['cookie.js'][18] = 0;
  _$jscoverage['cookie.js'][20] = 0;
  _$jscoverage['cookie.js'][21] = 0;
  _$jscoverage['cookie.js'][22] = 0;
  _$jscoverage['cookie.js'][25] = 0;
  _$jscoverage['cookie.js'][29] = 0;
  _$jscoverage['cookie.js'][32] = 0;
  _$jscoverage['cookie.js'][33] = 0;
  _$jscoverage['cookie.js'][34] = 0;
  _$jscoverage['cookie.js'][37] = 0;
  _$jscoverage['cookie.js'][38] = 0;
  _$jscoverage['cookie.js'][42] = 0;
  _$jscoverage['cookie.js'][43] = 0;
  _$jscoverage['cookie.js'][47] = 0;
  _$jscoverage['cookie.js'][48] = 0;
  _$jscoverage['cookie.js'][52] = 0;
  _$jscoverage['cookie.js'][53] = 0;
  _$jscoverage['cookie.js'][56] = 0;
  _$jscoverage['cookie.js'][61] = 0;
  _$jscoverage['cookie.js'][65] = 0;
  _$jscoverage['cookie.js'][66] = 0;
}
_$jscoverage['cookie.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * @module  cookie</span>","<span class=\"c\"> * @author  lifesinger@gmail.com</span>","<span class=\"c\"> */</span>","KISSY<span class=\"k\">.</span>add<span class=\"k\">(</span><span class=\"s\">'cookie'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>S<span class=\"k\">)</span> <span class=\"k\">{</span>","","    <span class=\"k\">var</span> doc <span class=\"k\">=</span> document<span class=\"k\">,</span>","        encode <span class=\"k\">=</span> encodeURIComponent<span class=\"k\">,</span>","        decode <span class=\"k\">=</span> decodeURIComponent<span class=\"k\">;</span>","","    S<span class=\"k\">.</span>Cookie <span class=\"k\">=</span> <span class=\"k\">{</span>","","        <span class=\"c\">/**</span>","<span class=\"c\">         * &#33719;&#21462; cookie &#20540;</span>","<span class=\"c\">         * @return {string} &#22914;&#26524; name &#19981;&#23384;&#22312;&#65292;&#36820;&#22238; undefined</span>","<span class=\"c\">         */</span>","        get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ret<span class=\"k\">,</span> m<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>isNotEmptyString<span class=\"k\">(</span>name<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">((</span>m <span class=\"k\">=</span> doc<span class=\"k\">.</span>cookie<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">'(?:^| )'</span> <span class=\"k\">+</span> name <span class=\"k\">+</span> <span class=\"s\">'(?:(?:=([^;]*))|;|$)'</span><span class=\"k\">)))</span> <span class=\"k\">{</span>","                    ret <span class=\"k\">=</span> m<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">?</span> decode<span class=\"k\">(</span>m<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">])</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> ret<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>name<span class=\"k\">,</span> val<span class=\"k\">,</span> expires<span class=\"k\">,</span> domain<span class=\"k\">,</span> path<span class=\"k\">,</span> secure<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> text <span class=\"k\">=</span> encode<span class=\"k\">(</span>val<span class=\"k\">),</span> date <span class=\"k\">=</span> expires<span class=\"k\">;</span>","","            <span class=\"c\">// &#20174;&#24403;&#21069;&#26102;&#38388;&#24320;&#22987;&#65292;&#22810;&#23569;&#22825;&#21518;&#36807;&#26399;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> date <span class=\"k\">===</span> <span class=\"s\">'number'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                date <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">();</span>","                date<span class=\"k\">.</span>setTime<span class=\"k\">(</span>date<span class=\"k\">.</span>getTime<span class=\"k\">()</span> <span class=\"k\">+</span> expires <span class=\"k\">*</span> <span class=\"s\">86400000</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"c\">// expiration date</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>date <span class=\"k\">instanceof</span> Date<span class=\"k\">)</span> <span class=\"k\">{</span>","                text <span class=\"k\">+=</span> <span class=\"s\">'; expires='</span> <span class=\"k\">+</span> date<span class=\"k\">.</span>toUTCString<span class=\"k\">();</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// domain</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>isNotEmptyString<span class=\"k\">(</span>domain<span class=\"k\">))</span> <span class=\"k\">{</span>","                text <span class=\"k\">+=</span> <span class=\"s\">'; domain='</span> <span class=\"k\">+</span> domain<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// path</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>isNotEmptyString<span class=\"k\">(</span>path<span class=\"k\">))</span> <span class=\"k\">{</span>","                text <span class=\"k\">+=</span> <span class=\"s\">'; path='</span> <span class=\"k\">+</span> path<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// secure</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>secure<span class=\"k\">)</span> <span class=\"k\">{</span>","                text <span class=\"k\">+=</span> <span class=\"s\">'; secure'</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            doc<span class=\"k\">.</span>cookie <span class=\"k\">=</span> name <span class=\"k\">+</span> <span class=\"s\">'='</span> <span class=\"k\">+</span> text<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        remove<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>name<span class=\"k\">,</span> domain<span class=\"k\">,</span> path<span class=\"k\">,</span> secure<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">// &#32622;&#31354;&#65292;&#24182;&#31435;&#21051;&#36807;&#26399;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>set<span class=\"k\">(</span>name<span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> domain<span class=\"k\">,</span> path<span class=\"k\">,</span> secure<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> isNotEmptyString<span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> S<span class=\"k\">.</span>isString<span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> val <span class=\"k\">!==</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * NOTES:</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  2010.04</span>","<span class=\"c\"> *   - get &#26041;&#27861;&#35201;&#32771;&#34385; ie &#19979;&#65292;</span>","<span class=\"c\"> *     &#20540;&#20026;&#31354;&#30340; cookie &#20026; 'test3; test3=3; test3tt=2; test1=t1test3; test3', &#27809;&#26377;&#31561;&#20110;&#21495;&#12290;</span>","<span class=\"c\"> *     &#38500;&#20102;&#27491;&#21017;&#33719;&#21462;&#65292;&#36824;&#21487;&#20197; split &#23383;&#31526;&#20018;&#30340;&#26041;&#24335;&#26469;&#33719;&#21462;&#12290;</span>","<span class=\"c\"> *   - api &#35774;&#35745;&#19978;&#65292;&#21407;&#26412;&#24819;&#20511;&#37492; jQuery &#30340;&#31616;&#26126;&#39118;&#26684;&#65306;S.cookie(name, ...), &#20294;&#32771;&#34385;&#21040;&#21487;&#25193;&#23637;&#24615;&#65292;&#30446;&#21069;</span>","<span class=\"c\"> *     &#29420;&#31435;&#25104;&#38745;&#24577;&#24037;&#20855;&#31867;&#30340;&#26041;&#24335;&#26356;&#20248;&#12290;</span>","<span class=\"c\"> */</span>"];
_$jscoverage['cookie.js'][5]++;
KISSY.add("cookie", (function (S) {
  _$jscoverage['cookie.js'][7]++;
  var doc = document, encode = encodeURIComponent, decode = decodeURIComponent;
  _$jscoverage['cookie.js'][11]++;
  S.Cookie = {get: (function (name) {
  _$jscoverage['cookie.js'][18]++;
  var ret, m;
  _$jscoverage['cookie.js'][20]++;
  if (isNotEmptyString(name)) {
    _$jscoverage['cookie.js'][21]++;
    if ((m = doc.cookie.match(("(?:^| )" + name + "(?:(?:=([^;]*))|;|$)")))) {
      _$jscoverage['cookie.js'][22]++;
      ret = (m[1]? decode(m[1]): "");
    }
  }
  _$jscoverage['cookie.js'][25]++;
  return ret;
}), set: (function (name, val, expires, domain, path, secure) {
  _$jscoverage['cookie.js'][29]++;
  var text = encode(val), date = expires;
  _$jscoverage['cookie.js'][32]++;
  if (((typeof date) === "number")) {
    _$jscoverage['cookie.js'][33]++;
    date = new Date();
    _$jscoverage['cookie.js'][34]++;
    date.setTime((date.getTime() + (expires * 86400000)));
  }
  _$jscoverage['cookie.js'][37]++;
  if ((date instanceof Date)) {
    _$jscoverage['cookie.js'][38]++;
    text += ("; expires=" + date.toUTCString());
  }
  _$jscoverage['cookie.js'][42]++;
  if (isNotEmptyString(domain)) {
    _$jscoverage['cookie.js'][43]++;
    text += ("; domain=" + domain);
  }
  _$jscoverage['cookie.js'][47]++;
  if (isNotEmptyString(path)) {
    _$jscoverage['cookie.js'][48]++;
    text += ("; path=" + path);
  }
  _$jscoverage['cookie.js'][52]++;
  if (secure) {
    _$jscoverage['cookie.js'][53]++;
    text += "; secure";
  }
  _$jscoverage['cookie.js'][56]++;
  doc.cookie = (name + "=" + text);
}), remove: (function (name, domain, path, secure) {
  _$jscoverage['cookie.js'][61]++;
  this.set(name, "", 0, domain, path, secure);
})};
  _$jscoverage['cookie.js'][65]++;
  function isNotEmptyString(val) {
    _$jscoverage['cookie.js'][66]++;
    return (S.isString(val) && (val !== ""));
}
}));
